// fxExtractState()
// Â© 2023 Adiv Abramson

// Attempt to extract the two character state abbreviation from the 
// input string of the form <city>(,| ) <state> <zip>.
// Now using custom function TrimAll(), developed earlier.
(input as any) as any =>
let
   // Trim internal and external spaces
   Trimmed_Text = try TrimAll(input) otherwise "",
   Removed_Commas = Text.Replace(Trimmed_Text, ",", ""),
   Split_Text = Text.Split(Removed_Commas, " "),
   // Inspect the second-to-last element of the list to see if it consists
   // of two uppercase alphabetic characters
   // Index of second-to-last element is 2 less than the count
   // because list is 0 based. E.g. In a list with 3 elements,
   // the index of the second-to-last element is 1 (= 3 -2).
   // Index of state must be >= 1. If < 1 then there aren't enough
   // elements in the input string, e.g. "CN 1234" was returning "CN",
   // which is incorrect.
   State_Element_Index = List.Count(Split_Text) - 2, 
   State_Element = if State_Element_Index >= 1 
                    then Split_Text{State_Element_Index}
                    else 
                       "",
   State = if Text.Length(State_Element) = 2 
                and List.ContainsAny(Text.ToList(State_Element), {"A".."Z"}) 
             then State_Element  
             else null   
             
                   
in
   try State otherwise null